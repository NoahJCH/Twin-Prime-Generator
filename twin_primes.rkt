#lang lazy

(define (output n s) ;choose -1 for infinite output
  (cond
    [(empty? s) (void)]
    [(= 0 n) (void)]
    [true
     (display (car s))
     (newline)
     (output (sub1 n) (cdr s))]))



(define (wheel lst n)
  (if (empty? lst) (wheelcaller n)
      (if (and (MR-test (+ n (car lst))) (MR-test (+ 2 n (car lst))))
          (cons (list (+ n (car lst)) (+ 2 n (car lst))) (wheel (cdr lst) n))
          (wheel (cdr lst) n))))
      ;(wheel-help (+ n (car lst)) (+ 2 n (car lst)) lst n)))

;(define (wheel-help lower upper lst n)
 ; (if (and (MR-test lower) (MR-test upper))
  ;    (cons (list lower upper) (wheel (cdr lst) n))
   ;   (wheel (cdr lst) n)))

(define (wheelcaller n)
  (wheeln)))


(define twinprimes
  (cons (list 3 5) (cons (list 5 7) (cons (list 11 13) (wheelcaller  -30030 )))))



;;call it with n and 0
(define (get-d-and-r d r)
  (if (= 0 (remainder d 2))
      (get-d-and-r (/ d 2) (+ r 1))
      (list d r)))

(define (call-m-test n)
  (m-test n (get-d-and-r  (- n 1)  0)))

(define (m-test n dr)
  (cond
    [(not (m-test-helper 9332593 n dr)) #f]
    [(not (m-test-helper 2 n dr)) #f]
    ;[(not (m-test-helper 2 n dr)) #f]
    [else #t]))

(define (m-test-helper a n dr)
  (miller-test a n dr (mod-power (remainder a n) (car dr) n 1)))

(define (miller-test a n dr result)
  (cond
    [(= 0 result) #t]
    [(= 1 result) #t]
    [(= (- n 1) result) #t]
    [else (r-loop (car dr) result n (- n 1))]))

(define (r-loop d result n end)
  (if (= d end) #f
      (cond
       ; [(= 1 result) #t]
        [(= end result) #t]
        [else (r-loop (* 2 d) (remainder (* result result) n) n end)]))) 

;; originaly call with (remainder base mod) r mod 1
(define (mod-power base pow mod result)
  (if (> pow 0)
      (if (= 1 (remainder pow 2))
          (mod-power (remainder (* base base) mod) (quotient pow 2) mod (remainder (* result base) mod))
          (mod-power (remainder (* base base) mod) (/ pow 2) mod result))
      result))

(define (smalltest n)
  (cond
    [(= n 2) #t]
[(= n 3) #t]
[(= n 5) #t]
[(= n 7) #t]
[(= n 11) #t]
[(= n 13) #t]
[(= n 17) #t]
[(= n 19) #t]
[(= n 23) #t]
[(= n 29) #t]
[(= n 31) #t]
[(= n 37) #t]
[(= n 41) #t]
[(= n 43) #t]
[(= n 47) #t]
[(= n 53) #t]
;[(= n 59) #t]
;[(= n 61) #t]
;[(= n 67) #t]
    [else #f]))

;;299417 and 2


(define (MR-test n)
  (cond
    [(< n 54) (smalltest n)]
;    [(= 0 (remainder n 2)) #f]
;[(= 0 (remainder n 3)) #f]
;[(= 0 (remainder n 5)) #f]
;[(= 0 (remainder n 7)) #f]
;[(= 0 (remainder n 11)) #f]
;[(= 0 (remainder n 13)) #f]
[(= 0 (remainder n 17)) #f]
[(= 0 (remainder n 19)) #f]
[(= 0 (remainder n 23)) #f]
[(= 0 (remainder n 29)) #f]
[(= 0 (remainder n 31)) #f]
[(= 0 (remainder n 37)) #f]
[(= 0 (remainder n 41)) #f]
[(= 0 (remainder n 43)) #f]
[(= 0 (remainder n 47)) #f]
[(= 0 (remainder n 53)) #f]
;[(= 0 (remainder n 59)) #f]
;[(= 0 (remainder n 61)) #f]
;[(= 0 (remainder n 67)) #f]
    [(call-m-test n) #t] ;;was up to 41 before now it will be up to 19 up to 50 is 90k up to 53 is 96k up to 53 is 100k
    [else #f]))



